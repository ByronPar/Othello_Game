@model Othello_Game.Models.Jugador

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <link rel="stylesheet" type="text/css" href="~/Content/Login.css" />
    <div class="login-wrap">
        <div class="login-html">
            @{
                if (!string.IsNullOrEmpty(ViewBag.Message))
                {
                    //message tiene valor

                    <div class="alert alert-danger" data-dismiss="alert" id="succes-alert" role="alert">@ViewBag.Message</div>


                }
                else if (!string.IsNullOrEmpty(ViewBag.Message2))
                {
                    //message tiene valor

                    <div class="alert alert-success" data-dismiss="alert" id="succes-alert" role="alert">@ViewBag.Message2</div>

                }
                <script>
                    //autoclose
                    window.setTimeout(function () {
                        $(".alert").fadeTo(1500, 0).slideDown(1000, function () {
                            $(this).remove();
                        });
                    }, 2700);  // 3 segundos y desaparece
                </script>


            }
            <center><input id="tab-1" type="radio" name="tab" class="sign-in" checked><label for="tab-1" class="tab">Registro</label></center>
            <div class="login-form">
                <div class="sin-up-htm">
                    <center>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="group">
                            @Html.LabelFor(model => model.nombres, "Nombres", htmlAttributes: new { @class = "label" })
                            @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
                        </div>
                        <div class="group">
                            @Html.LabelFor(model => model.apellidos, "Apellidos", htmlAttributes: new { @class = "label" })
                            @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
                        </div>
                        <div class="group">
                            @Html.LabelFor(model => model.id_usuario, "Nombre de Usuario", htmlAttributes: new { @class = "label" })
                            @Html.EditorFor(model => model.id_usuario, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.id_usuario, "", new { @class = "text-danger" })
                        </div>
                        <div class="group">
                            @Html.LabelFor(model => model.contrasenia, "Password", htmlAttributes: new { @class = "label" })
                            @Html.EditorFor(model => model.contrasenia, new { htmlAttributes = new { @class = "input", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.contrasenia, "", new { @class = "text-danger" })
                        </div>
                        <div class="group">
                            @Html.LabelFor(model => model.fecha_nacimiento, "Fecha de Nacimiento", htmlAttributes: new { @class = "label" })
                            @Html.EditorFor(model => model.fecha_nacimiento, new { htmlAttributes = new { @class = "input", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new { @class = "text-danger" })
                        </div>
                        <div class="group">
                            @Html.LabelFor(model => model.id_pais, "Pais", htmlAttributes: new { @class = "label" })
                            @Html.DropDownList("id_pais", (IEnumerable<SelectListItem>)ViewBag.id_pais, "Seleccionar Pais", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.id_pais, "", new { @class = "text-danger" })
                        </div>
                        <div class="group">
                            @Html.LabelFor(model => model.correo, "correo electronico", htmlAttributes: new { @class = "label" })
                            @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "input", @type = "email" } })
                            @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                        </div>
                        <div class="group">
                            <input type="submit" value="Registrarse" class="button" />
                        </div>
                    </center>
                    <div class="hr"></div>
                    <div class="foot-lnk">
                        <label for="tab-1">Si ya Estas Registrado , no debes estar aqui   :)</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
